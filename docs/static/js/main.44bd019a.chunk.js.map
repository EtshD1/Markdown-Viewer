{"version":3,"sources":["App.tsx","index.tsx"],"names":["marked","setOptions","breaks","App","useState","value","setValue","id","className","dangerouslySetInnerHTML","__html","onChange","e","target","ReactDOM","render","document","querySelector"],"mappings":"iPAGAA,IAAOC,WAAW,CAAEC,QAAQ,IAE5B,IAgEeC,EAnBH,WACV,MAA0BC,mBA9CX,smCA8Cf,mBAAOC,EAAP,KAAcC,EAAd,KAIA,OAAQ,sBAAKC,GAAG,gBAAR,UACN,sBAAKC,UAAU,UAAf,UACE,yCACA,qBAAKD,GAAG,UAAUE,wBAAyB,CAAEC,OAAQV,IAAOK,SAE9D,sBAAKG,UAAU,UAAf,UACE,wCACA,qBAAKD,GAAG,aAAR,SACE,0BAAUA,GAAG,SAASI,SAVP,SAACC,GAAD,OAA+CN,EAASM,EAAEC,OAAOR,QAUlCA,MAAOA,aCxD7DS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.44bd019a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport marked from 'marked';\r\n\r\nmarked.setOptions({ breaks: true });\r\n\r\nconst initialText = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | -------------\r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want!\r\n1. And last but not least, let's not forget embedded images:\r\n\r\n![React Logo w/ Text](https://goo.gl/Umyytc)\r\n`;\r\n\r\nconst App = () => {\r\n  const [value, setValue] = useState(initialText);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => setValue(e.target.value);\r\n\r\n  return (<div id='mainContainer'>\r\n    <div className=\"content\">\r\n      <h1>Preview</h1>\r\n      <div id=\"preview\" dangerouslySetInnerHTML={{ __html: marked(value) }} />\r\n    </div>\r\n    <div className=\"content\">\r\n      <h1>Editor</h1>\r\n      <div id=\"textEditor\">\r\n        <textarea id=\"editor\" onChange={handleChange} value={value}></textarea>\r\n      </div>\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './reset.css';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}